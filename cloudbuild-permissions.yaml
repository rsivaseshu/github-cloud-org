steps:
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      GITHUB_TOKEN=$(gcloud secrets versions access latest --secret="github-token")
      echo "GITHUB_TOKEN=${GITHUB_TOKEN}" > /workspace/terraform_env_vars

- name: 'hashicorp/terraform:1.5.7'
  entrypoint: 'sh'
  env:
    - 'TF_INPUT=0'
  args:
    - '-c'
    - |
      export $(cat /workspace/terraform_env_vars | xargs)
      terraform -chdir=envs/prod init -input=false

- name: 'hashicorp/terraform:1.5.7'
  entrypoint: 'sh'
  env:
    - 'TF_INPUT=0'
  args:
    - '-c'
    - |
      export $(cat /workspace/terraform_env_vars | xargs)
      terraform -chdir=envs/prod plan -out=tfplan -input=false

- name: 'hashicorp/terraform:1.5.7'
  entrypoint: 'sh'
  env:
    - 'TF_INPUT=0'
  args:
    - '-c'
    - |
      export $(cat /workspace/terraform_env_vars | xargs)
      # Show generated CODEOWNERS content from plan by inspecting module outputs after plan
      terraform -chdir=envs/prod output -json || true
      # If you have jq installed in the image you can pretty-print specific outputs, e.g.:
      # terraform -chdir=envs/prod output -json | jq '.codeowners_generated'

- name: 'hashicorp/terraform:1.5.7'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      if [ "$TF_APPLY" = "true" ]; then
        export $(cat /workspace/terraform_env_vars | xargs)
        terraform -chdir=envs/prod apply -input=false tfplan
      else
        echo "Skipping apply. Set _TF_APPLY=true substitution to apply."
      fi

substitutions:
  _TF_APPLY: "false"

timeout: "1200s"
